---
title: "How Do Binaries of different languages work together?"
date: 2024-06-22T15:22:35-04:00
draft: true
ShowToc: true
---

## How does an app written in Swift work with another app written in Python? Like aren't they both binaries? Can't two binaries just work with each other? 

Well first of all, Python isn't directly compiled. It's interepreted. For more on that see [here](https://stackoverflow.com/a/6889786/5175709). That said assuming two binaries are written in different languages that what matters is: 

Is the Application binary interface (ABI) of them.  It's identical in terms of logic of how two classes need to have a matching interface (Application Programming Interface - API) for you to be able to call one method from the other.  

So if you've compiled something from `Swift` into a binary and you compiled something else written in `C`, then if the ABIs of these two can connect with each other then you're good. 

> And Swift 5’s (or any) stable ABI is a promise that we won’t change how interoperating with swift-generated machine code works except in additive ways. So if you make something that understand’s Swift’s function calls today you have a guarantee that it will continue to understand those calls going forward. Where “something” could be another binary you link, or an FFI, or a debugger, or whatever - David Smith


## How can I call `C` functions from `Swift`? 

Import the C header. Call the function

### Example
@self


Samples of breaking changes:

- For **non-frozen** structs, that's correct: https://github.com/apple/swift/blob/main/docs/LibraryEvolution.rst#structs

## Why even use `frozen`? What's the benefit?